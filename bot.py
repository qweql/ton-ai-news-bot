# bot.py (—Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)
import time
from config import BOT_TOKEN, CHANNEL_ID, NEWS_LIMIT
from database import Database
from nft_analyzer import NFTAnalyzer
from gift_analyzer import GiftAnalyzer
from ml_predictor import TONPredictor
from alert_system import AlertSystem
from transformers import pipeline
import requests
import feedparser
from telegram import Bot
from telegram.error import TelegramError
import os

print("üöÄ –ó–∞–ø—É—Å–∫ TON AI Analytics Platform...")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
db = Database()
nft_analyzer = NFTAnalyzer()
gift_analyzer = GiftAnalyzer()
predictor = TONPredictor()
alert_system = AlertSystem()
sentiment_analyzer = pipeline('sentiment-analysis', model='cardiffnlp/twitter-roberta-base-sentiment-latest')

def main():
    try:
        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–æ–≤–µ—â–µ–Ω–∏–π...")
        alert_system.check_price_alerts()
        alert_system.check_volume_alerts()
        
        print("üìä –°–±–æ—Ä —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
        price_data = get_ton_price()
        db.add_price_data(*price_data)
        
        print("üñºÔ∏è –ê–Ω–∞–ª–∏–∑ NFT...")
        nft_collections = nft_analyzer.get_top_nft_collections()
        nft_report = nft_analyzer.analyze_nft_trends(nft_collections)
        
        print("üéÅ –ê–Ω–∞–ª–∏–∑ –≥–∏—Ñ—Ç-–±–æ—Ç–æ–≤...")
        gift_report = gift_analyzer.analyze_all_gifts()
        
        print("ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–≥–Ω–æ–∑–æ–≤...")
        features = predictor.get_current_features()
        if features:
            prediction, confidence = predictor.predict_future_price(features)
            prediction_text = f"üìà –ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 6—á: {prediction:+.2f}% (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.0%})"
        else:
            prediction_text = "üìä –ü—Ä–æ–≥–Ω–æ–∑: –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö"
        
        print("üì∞ –ê–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–µ–π...")
        news_items = get_crypto_news()
        
        # –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –æ—Ç—á–µ—Ç
        send_comprehensive_report(price_data, nft_report, gift_report, prediction_text)
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
        for news in news_items[:NEWS_LIMIT]:
            if not db.is_news_posted(news['url']):
                process_and_send_news(news, price_data)
                time.sleep(10)
                
        print("‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
